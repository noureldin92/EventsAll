{"version":3,"file":"static/js/904.e5c8d8bb.chunk.js","mappings":"yNACA,QAAwB,yBAAxB,EAA2D,2B,aCgC3D,QA7BA,SAAkBA,GAAa,IAAZ,MAAEC,GAAOD,EAC1B,MAAME,GAASC,EAAAA,EAAAA,MACf,IAAIC,GAAaC,EAAAA,EAAAA,IAAmB,aASpC,OACEC,EAAAA,EAAAA,MAAA,WAASC,UAAWC,EAAcC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKC,IAAKV,EAAMW,MAAOC,IAAKZ,EAAMa,SAClCJ,EAAAA,EAAAA,KAAA,MAAAD,SAAKR,EAAMa,SACXJ,EAAAA,EAAAA,KAAA,QAAAD,SAAOR,EAAMc,QACbL,EAAAA,EAAAA,KAAA,KAAAD,SAAIR,EAAMe,eACVN,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAgBC,SAC9BL,IACCE,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAR,SAAA,EACEC,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAG,OAAMV,SAAC,UAChBC,EAAAA,EAAAA,KAAA,UAAQU,QAlBlB,WACkBC,OAAOC,QAAQ,kBAG7BpB,EAAO,KAAM,CAAEqB,OAAQ,UAE3B,EAY8Cd,SAAC,kBAMjD,ECLA,QAfA,WACE,MAAM,MAAER,IAAUI,EAAAA,EAAAA,IAAmB,gBAErC,OACEK,EAAAA,EAAAA,KAAAO,EAAAA,SAAA,CAAAR,UACEC,EAAAA,EAAAA,KAACc,EAAAA,SAAQ,CACPC,UAAUf,EAAAA,EAAAA,KAAA,KAAGgB,MAAO,CAAEC,UAAW,UAAWlB,SAAC,0BAA0BA,UACvEC,EAAAA,EAAAA,KAACkB,EAAAA,GAAK,CAACC,QAAS5B,EAAMQ,SAClBqB,IAAgBpB,EAAAA,EAAAA,KAACqB,EAAS,CAAC9B,MAAO6B,SAK9C,EAIAE,eAAeC,EAAUC,GACvB,MAAMC,QAAiBC,MAAM,gCAAkCF,GAE/D,GAAKC,EAASE,GAOP,CAEL,aADsBF,EAASG,QAChBrC,KACjB,CATE,MAAMqC,EAAAA,EAAAA,IACJ,CAAEC,QAAS,+CACX,CACEC,OAAQ,KAOhB,CAEO,SAASC,EAAMzC,GAAuB,IAAtB,QAAE0C,EAAO,OAAEC,GAAQ3C,EACxC,MAAMkC,EAAKS,EAAOC,QAClB,OAAOC,EAAAA,EAAAA,IAAM,CACX5C,MAAOgC,EAAUC,IAErB,CAEOF,eAAec,EAAMC,GAAuB,IAAtB,OAAEJ,EAAM,QAAED,GAASK,EAC9C,MAAMH,EAAUD,EAAOC,QACvB,IAAII,EAAQC,aAAaC,QAAQ,SAMjC,WALuBd,MAAM,gCAAkCQ,EAAS,CACtErB,OAAQmB,EAAQnB,OAChB4B,QAAS,CAAEC,cAAe,UAAYJ,MAG1BX,GACZ,MAAMC,EAAAA,EAAAA,IACJ,CAAEC,QAAS,2BACX,CACEC,OAAQ,MAId,OAAOa,EAAAA,EAAAA,IAAS,UAClB,C","sources":["webpack://react-complete-guide/./src/components/EventItem.module.css?241a","components/EventItem.js","pages/EventDetail.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"event\":\"EventItem_event__LQuLe\",\"actions\":\"EventItem_actions__F6zf4\"};","import { Link, useRouteLoaderData, useSubmit } from \"react-router-dom\";\n\nimport classes from \"./EventItem.module.css\";\n\nfunction EventItem({ event }) {\n  const submit = useSubmit();\n  let isLoggedIn = useRouteLoaderData(\"tokenData\");\n  function startDeleteHandler() {\n    const proceed = window.confirm(\"Are you sure?\");\n\n    if (proceed) {\n      submit(null, { method: \"delete\" });\n    }\n  }\n\n  return (\n    <article className={classes.event}>\n      <img src={event.image} alt={event.title} />\n      <h1>{event.title}</h1>\n      <time>{event.date}</time>\n      <p>{event.description}</p>\n      <menu className={classes.actions}>\n        {isLoggedIn && (\n          <>\n            <Link to=\"edit\">Edit</Link>\n            <button onClick={startDeleteHandler}>Delete</button>\n          </>\n        )}\n      </menu>\n    </article>\n  );\n}\n\nexport default EventItem;\n","import { Suspense } from \"react\";\nimport {\n  useRouteLoaderData,\n  json,\n  redirect,\n  defer,\n  Await,\n} from \"react-router-dom\";\n\nimport EventItem from \"../components/EventItem\";\n\nfunction EventDetailPage() {\n  const { event } = useRouteLoaderData(\"event-detail\");\n\n  return (\n    <>\n      <Suspense\n        fallback={<p style={{ textAlign: \"center\" }}> Loading Details ... </p>}>\n        <Await resolve={event}>\n          {(loadedEvent) => <EventItem event={loadedEvent} />}\n        </Await>\n      </Suspense>\n    </>\n  );\n}\n\nexport default EventDetailPage;\n\nasync function loadEvent(id) {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n\n  if (!response.ok) {\n    throw json(\n      { message: \"Could not fetch details for selected event.\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\n\nexport function loader({ request, params }) {\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n  });\n}\n\nexport async function action({ params, request }) {\n  const eventId = params.eventId;\n  let token = localStorage.getItem(\"token\");\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\n    method: request.method,\n    headers: { Authorization: \"Bearer \" + token },\n  });\n\n  if (!response.ok) {\n    throw json(\n      { message: \"Could not delete event.\" },\n      {\n        status: 500,\n      }\n    );\n  }\n  return redirect(\"/events\");\n}\n"],"names":["_ref","event","submit","useSubmit","isLoggedIn","useRouteLoaderData","_jsxs","className","classes","children","_jsx","src","image","alt","title","date","description","_Fragment","Link","to","onClick","window","confirm","method","Suspense","fallback","style","textAlign","Await","resolve","loadedEvent","EventItem","async","loadEvent","id","response","fetch","ok","json","message","status","loader","request","params","eventId","defer","action","_ref2","token","localStorage","getItem","headers","Authorization","redirect"],"sourceRoot":""}